[ default ]
ca                      = TODO                  # CA name (variable used later)
dir                     = .                     # Top dir
name_opt                = multiline,-esc_msb,utf8 # Display UTF-8 characters

# CA certificate request
[ req ]
default_bits            = TODO                  # RSA key size
encrypt_key             = TODO                  # Protect private key (yes/no)
default_md              = sha256                # MD to use
utf8                    = yes                   # Input is UTF-8
string_mask             = utf8only              # Emit UTF-8 strings
prompt                  = yes                   # Prompt for DN (ask questions for filling in fields)
distinguished_name      = TODO                  # DN section (choose which DN to ask from (email_dn, ca_dn, server_dn)
req_extensions          = TODO                  # Desired extensions for the request (ca_reqext, server_reqext, email_reqext)

[ ca_dn ]
countryName             = "1. Country Name (2 letters) (eg, CH)       "
countryName_default     = TODO
countryName_max         = 2
organizationName        = "3. Organization Name        (eg, company)  "
organizationName_default = TODO
commonName              = "4. Common Name              (eg, FQDN)     "
commonName_max          = 64

[ server_dn ]
countryName             = "1. Country Name (2 letters) (eg, CH)       "
countryName_default     = TODO
countryName_max         = 2
organizationName        = "3. Organization Name        (eg, company)  "
organizationName_default = TODO
commonName              = "4. Common Name              (eg, FQDN)     "
commonName_max          = 64

[ email_dn ]
countryName             = "1. Country Name (2 letters) (eg, CH)       "
countryName_default     = TODO
countryName_max         = 2
organizationName        = "2. Organization Name        (eg, company)  "
organizationName_default = TODO
commonName              = "3. Common Name              (eg, full name)"
commonName_max          = 64
emailAddress            = "4. Email Address            (eg, name@fqdn)"
emailAddress_max        = 40

[ ca_reqext ]
keyUsage                = critical,keyCertSign,cRLSign
basicConstraints        = critical,CA:true,pathlen:0
subjectKeyIdentifier    = hash

[ server_reqext ]
keyUsage                = critical,digitalSignature,keyEncipherment
extendedKeyUsage        = serverAuth,clientAuth
subjectKeyIdentifier    = hash
subjectAltName          = IP:YOUR_IP_ADDRESS #TODO IP address

[ email_reqext ]
keyUsage                = critical,digitalSignature,keyEncipherment
extendedKeyUsage        = emailProtection,clientAuth
subjectKeyIdentifier    = hash
subjectAltName          = email:YOUR_EMAIL_ADDRESS #TODO email address

# CA operational settings

[ ca ]
default_ca              = def_ca                # The default CA section

[ def_ca ]
#TODO A modifier si necessaire
certificate             = $dir/$ca.crt          # The CA certificate
private_key             = $dir/private/$ca.key  # CA private key
new_certs_dir           = $dir/ca               # Certificate archive
serial                  = $dir/db/$ca.crt.srl   # File where serial number is stored
database                = $dir/db/$ca.db        # Index file
unique_subject          = no                    # Require unique subject
default_days            = TODO                  # How long to certify for
default_md              = sha256                # MD to use
policy                  = match_pol             # Default naming policy
email_in_dn             = no                    # Add email to cert DN
preserve                = no                    # Keep passed DN ordering
name_opt                = $name_opt             # Subject DN display options
cert_opt                = ca_default            # Certificate display options
copy_extensions         = copy                  # Copy extensions from CSR
x509_extensions         = TODO                  # Default cert extensions (choose between server_ext, email_ext, client_ext, signing_ca_ext)
default_crl_days        = 1                     # How long before next CRL

[ match_pol ]
countryName             = match                 # Must match country code
stateOrProvinceName     = optional              # Included if present
localityName            = optional              # Included if present
organizationName        = match                 # Must match organization name
organizationalUnitName  = optional              # Included if present
commonName              = supplied              # Must be present

[ extern_pol ]
countryName             = supplied              # Must be present
stateOrProvinceName     = optional              # Included if present
localityName            = optional              # Included if present
organizationName        = supplied              # Must be present
organizationalUnitName  = optional              # Included if present
commonName              = supplied              # Must be present

[ any_pol ]
domainComponent         = optional
countryName             = optional
stateOrProvinceName     = optional
localityName            = optional
organizationName        = optional
organizationalUnitName  = optional
commonName              = optional
emailAddress            = optional

# Extensions

[ signing_ca_ext ]
keyUsage                = critical,keyCertSign,cRLSign
basicConstraints        = critical,CA:true,pathlen:0
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always

[ server_ext ]
keyUsage                = critical,digitalSignature,keyEncipherment
basicConstraints        = CA:false
extendedKeyUsage        = serverAuth,clientAuth
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always

[ client_ext ]
keyUsage                = critical,digitalSignature
basicConstraints        = CA:false
extendedKeyUsage        = clientAuth
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always


[ email_ext ]
keyUsage                = critical,digitalSignature,keyEncipherment
basicConstraints        = CA:false
extendedKeyUsage        = emailProtection,clientAuth,anyExtendedKeyUsage
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always

